@using Biblioteca.Models;
@model List<Usuario>

@{
    ViewBag.Title = "Gestión de Usuarios";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}

<link rel="stylesheet" href="~/Content/Administrador/Clientes/Index.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

<div class="dashboard-container">
    <header class="dashboard-header">
        <div>
            <h1 class="dashboard-title">Gestión de Usuarios</h1>
            <p class="dashboard-subtitle">Administra los usuarios administradores del sistema</p>
        </div>
        <div class="dashboard-actions">
            <button class="btn btn-primary" onclick="toggleModal('usuarioModal')">
                <i class="fas fa-user-plus"></i> Nuevo Usuario
            </button>
        </div>
    </header>

    <div class="content-card">
        <div class="search-container">
            <form method="get" action="/AdministradorUsuarios/Index" role="search" class="search-form">
                <div class="search-input-group">
                    <input type="text" name="busqueda" placeholder="Buscar usuarios por nombre o correo..." value="@Request.QueryString["search"]" aria-label="Buscar usuarios">
                    <button type="submit" class="btn btn-search" aria-label="Buscar">
                        <i class="fas fa-search"></i> Buscar
                    </button>
                </div>
            </form>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Correo Electrónico</th>
                            <th>Biblioteca</th>
                            <th>Rol</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var usuario in Model)
                        {
                            <tr>
                                <td>
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            <i class="fas fa-user-tie"></i>
                                        </div>
                                        <div class="user-details">
                                            <h4>@usuario.Nombre</h4>
                                        </div>
                                    </div>
                                </td>
                                <td>@usuario.Correo</td>
                                <td>
                                    <span class="biblioteca-name">
                                        @(usuario.Biblioteca != null ? usuario.Biblioteca.Nombre : "Sin asignar")
                                    </span>
                                </td>
                                <td>
                                    <span class="role-badge">
                                        @(usuario.RolUsuario != null ? usuario.RolUsuario.Nombre : "Sin rol")
                                    </span>
                                </td>
                                <td>
                                    <span class="status-badge @(usuario.Estatus ? "active" : "inactive")">
                                        @(usuario.Estatus ? "Activo" : "Inactivo")
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn-action" onclick="openEditUsuarioModal({
                                            ID: '@usuario.ID',
                                            Nombre: '@usuario.Nombre',
                                            Correo: '@usuario.Correo',
                                            RolID: '@usuario.RolID',
                                            BibliotecaID: '@usuario.BibliotecaID'
                                        })" title="Editar usuario">
                                            <i class="fas fa-edit"></i> Editar
                                        </button>
                                        <form method="post" action="@Url.Action("Delete", "AdministradorUsuarios", new { id = usuario.ID })"
                                              onsubmit="return confirm('¿Está seguro de que desea eliminar este usuario?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-action btn-delete" title="Eliminar usuario">
                                                <i class="fas fa-trash"></i> Eliminar
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="table-footer">
                <div class="table-info">
                    Mostrando @Model.Count usuario(s)
                </div>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-user-tie"></i>
                </div>
                <h3>No se encontraron usuarios</h3>
                <p>No hay usuarios administradores registrados en el sistema</p>
                <button class="btn btn-primary" onclick="toggleModal('usuarioModal')">
                    <i class="fas fa-user-plus"></i> Crear primer usuario
                </button>
            </div>
        }
    </div>
</div>

<!-- Modal para Nuevo Usuario -->
<div class="modal-overlay" id="usuarioModal">
    <div class="modal-form">
        <button class="close-btn" onclick="closeForm('usuarioModal')">✖</button>
        <h2>Crear Nuevo Usuario</h2>
        <form method="post" action="/AdministradorUsuarios/Create">
            @Html.AntiForgeryToken()

            <div class="form-group">
                <label for="Nombre">Nombre del Usuario *</label>
                <input type="text" id="Nombre" name="Nombre" required placeholder="Nombre completo del usuario">
            </div>

            <div class="form-group">
                <label for="Correo">Correo Electrónico *</label>
                <input type="email" id="Correo" name="Correo" required placeholder="correo@ejemplo.com">
            </div>

            <div class="form-group">
                <label for="Contrasena">Contraseña *</label>
                <input type="password" id="Contrasena" name="Contrasena" required placeholder="Mínimo 6 caracteres">
            </div>

            <div class="form-group">
                <label for="BibliotecaID">Biblioteca Asignada *</label>
                <select id="BibliotecaID" name="BibliotecaID" required>
                    <option value="">-- Seleccione una biblioteca --</option>
                    @foreach (var biblioteca in ViewBag.Bibliotecas)
                    {
                        <option value="@biblioteca.ID">@biblioteca.Nombre</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="RolID">Rol del Usuario *</label>
                <select id="RolID" name="RolID" required>
                    <option value="">-- Seleccione un rol --</option>
                    @foreach (var rol in ViewBag.Roles)
                    {
                        <option value="@rol.ID">@rol.Nombre</option>
                    }
                </select>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeForm('usuarioModal')">Cancelar</button>
                <button type="submit" class="btn btn-success">Crear Usuario</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal para Editar Usuario -->
<div class="modal-overlay" id="EditarUsuario">
    <div class="modal-form">
        <button class="close-btn" onclick="closeForm('EditarUsuario')">✖</button>
        <h2>Editar Usuario</h2>
        <form method="post" action="/AdministradorUsuarios/Edit">
            @Html.AntiForgeryToken()
            <input type="hidden" id="editId" name="ID" />

            <div class="form-group">
                <label for="editNombre">Nombre del Usuario *</label>
                <input type="text" id="editNombre" name="Nombre" required />
            </div>

            <div class="form-group">
                <label for="editEmail">Correo Electrónico *</label>
                <input type="email" id="editEmail" name="Correo" required />
            </div>

            <div class="form-group">
                <label for="editContrasena">Contraseña (dejar vacío para mantener la actual)</label>
                <input type="password" id="editContrasena" name="Contrasena" placeholder="Nueva contraseña (opcional)" />
            </div>

            <div class="form-group">
                <label for="editBibliotecaID">Biblioteca Asignada *</label>
                <select id="editBibliotecaID" name="BibliotecaID" required>
                    <option value="">-- Seleccione una biblioteca --</option>
                    @foreach (var biblioteca in ViewBag.Bibliotecas)
                    {
                        <option value="@biblioteca.ID">@biblioteca.Nombre</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="editRol">Rol del Usuario *</label>
                <select id="editRol" name="RolID" required>
                    <option value="">-- Seleccione un rol --</option>
                    @foreach (var rol in ViewBag.Roles)
                    {
                        <option value="@rol.ID">@rol.Nombre</option>
                    }
                </select>
            </div>

            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeForm('EditarUsuario')">Cancelar</button>
                <button type="submit" class="btn btn-success">Guardar Cambios</button>
            </div>
        </form>
    </div>
</div>

<script>
    // Funciones para abrir y cerrar modales
    function toggleModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal.style.display === "flex") {
            modal.style.display = "none";
        } else {
            modal.style.display = "flex";
        }
    }

    function openEditUsuarioModal(usuario) {
        document.getElementById('editId').value = usuario.ID;
        document.getElementById('editNombre').value = usuario.Nombre;
        document.getElementById('editEmail').value = usuario.Correo;
        document.getElementById('editRol').value = usuario.RolID;
        document.getElementById('editBibliotecaID').value = usuario.BibliotecaID;

        toggleModal('EditarUsuario');
    }

    function closeForm(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // Cerrar modal al hacer clic fuera
    document.querySelectorAll('.modal-overlay').forEach(modal => {
        modal.addEventListener('click', function (e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });
    });

    // Cerrar con tecla ESC
    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            document.querySelectorAll('.modal-overlay').forEach(modal => {
                modal.style.display = 'none';
            });
        }
    });
</script>