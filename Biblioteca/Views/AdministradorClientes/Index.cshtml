@using Biblioteca.Models;
@model List<Cliente>

@{
    ViewBag.Title = "Gestión de Clientes";
    Layout = "~/Views/Shared/_LayoutAdministrador.cshtml";
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<link rel="stylesheet" href="~/Content/Administrador/Clientes/Index.css" />

<div class="dashboard-container">
    <header class="dashboard-header">
        <div>
            <h1 class="dashboard-title">Gestión de Clientes</h1>
            <p class="dashboard-subtitle">Administra los clientes registrados en el sistema</p>
        </div>
        <div class="dashboard-actions">
            <button class="btn btn-primary" onclick="toggleModal('clienteModal')">
                <i class="fas fa-user-plus"></i> Nuevo Cliente
            </button>
        </div>
    </header>

    <div class="content-card">
        <div class="search-container">
            <form method="get" action="/AdministradorClientes/Index" role="search" class="search-form">
                <div class="search-input-group">
                    <input type="text" name="busqueda" placeholder="Buscar clientes por nombre o correo..." value="@Request.QueryString["search"]" aria-label="Buscar cliente">
                    <button type="submit" class="btn btn-search" aria-label="Buscar">
                        <i class="fas fa-search"></i> Buscar
                    </button>
                </div>
            </form>
        </div>

        @if (Model != null && Model.Any())
        {
            <div class="table-responsive">
                <table class="data-table">
                    <thead>
                        <tr>
                            <th>Cliente</th>
                            <th>Correo Electrónico</th>
                            <th>Biblioteca</th>
                            <th>Rol</th>
                            <th>Estado</th>
                            <th>Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var cliente in Model)
                        {
                            <tr>
                                <td>
                                    <div class="user-info">
                                        <div class="user-avatar">
                                            <i class="fas fa-user"></i>
                                        </div>
                                        <div class="user-details">
                                            <h4>@cliente.Nombre</h4>
                                        </div>
                                    </div>
                                </td>
                                <td>@cliente.Correo</td>
                                <td>
                                    <span class="biblioteca-name">@cliente.Biblioteca.Nombre</span>
                                </td>
                                <td>
                                    <span class="role-badge">
                                        @(cliente.RolClientes != null ? cliente.RolClientes.Nombre : "Sin rol")
                                    </span>
                                </td>
                                <td>
                                    <span class="status-badge @(cliente.Estatus ? "active" : "inactive")">
                                        @(cliente.Estatus ? "Activo" : "Inactivo")
                                    </span>
                                </td>
                                <td>
                                    <div class="action-buttons">
                                        <button class="btn-action" onclick="openEditClienteModal({
                                            ID: '@cliente.ID',
                                            Nombre: '@cliente.Nombre',
                                            Correo: '@cliente.Correo',
                                            RolID: '@cliente.RolID',
                                            BibliotecaID: '@cliente.BibliotecaID'
                                        })" title="Editar cliente">
                                            <i class="fas fa-edit"></i> Editar
                                        </button>
                                        <form method="post" action="@Url.Action("Delete", "AdministradorClientes", new { id = cliente.ID })"
                                              onsubmit="return confirm('¿Está seguro de que desea eliminar este cliente?');">
                                            @Html.AntiForgeryToken()
                                            <button type="submit" class="btn-action btn-delete" title="Eliminar cliente">
                                                <i class="fas fa-trash"></i> Eliminar
                                            </button>
                                        </form>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <div class="table-footer">
                <div class="table-info">
                    Mostrando @Model.Count cliente(s)
                </div>
            </div>
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-users"></i>
                </div>
                <h3>No se encontraron clientes</h3>
                <p>No hay clientes registrados en el sistema actualmente</p>
                <button class="btn btn-primary" onclick="toggleModal('clienteModal')">
                    <i class="fas fa-user-plus"></i> Crear primer cliente
                </button>
            </div>
        }
    </div>
</div>

<!-- Modal de Crear Cliente -->
<div class="modal-overlay" id="clienteModal">
    <div class="modal-form">
        <button class="close-btn" onclick="closeForm('clienteModal')">✖</button>
        <h2>Crear Nuevo Cliente</h2>
        <form method="post" action="/AdministradorClientes/Create">
            @Html.AntiForgeryToken()
            <div class="form-group">
                <label for="NombreCliente">Nombre *</label>
                <input type="text" id="NombreCliente" name="Nombre" required placeholder="Nombre completo del cliente" />
            </div>
            <div class="form-group">
                <label for="Correo">Correo Electrónico *</label>
                <input type="email" id="Correo" name="Correo" required placeholder="correo@ejemplo.com" />
            </div>
            <div class="form-group">
                <label for="Contrasena">Contraseña *</label>
                <input type="password" id="Contrasena" name="Contrasena" required placeholder="Mínimo 6 caracteres" />
            </div>
            <div class="form-group">
                <label for="RolID">Rol *</label>
                <select id="RolID" name="RolID" class="form-control" required>
                    <option value="">Seleccione un rol</option>
                    @foreach (var rol in ViewBag.Roles as List<RolCliente>)
                    {
                        <option value="@rol.ID">@rol.Nombre</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="BibliotecaID">Biblioteca *</label>
                <select id="BibliotecaID" name="BibliotecaID" class="form-control" required>
                    <option value="">Seleccione una biblioteca</option>
                    @foreach (var biblioteca in ViewBag.Bibliotecas as List<Biblioteca>)
                    {
                        <option value="@biblioteca.ID">@biblioteca.Nombre</option>
                    }
                </select>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeForm('clienteModal')">Cancelar</button>
                <button type="submit" class="btn btn-success">Crear Cliente</button>
            </div>
        </form>
    </div>
</div>

<!-- Modal de Editar Cliente -->
<div class="modal-overlay" id="editarClienteModal">
    <div class="modal-form">
        <button class="close-btn" onclick="closeForm('editarClienteModal')">✖</button>
        <h2>Editar Cliente</h2>
        <form method="post" action="/AdministradorClientes/Edit">
            @Html.AntiForgeryToken()
            <input type="hidden" id="EditID" name="ID" />

            <div class="form-group">
                <label for="EditNombreCliente">Nombre *</label>
                <input type="text" id="EditNombreCliente" name="Nombre" required />
            </div>
            <div class="form-group">
                <label for="EditCorreo">Correo Electrónico *</label>
                <input type="email" id="EditCorreo" name="Correo" required />
            </div>
            <div class="form-group">
                <label for="EditContrasena">Contraseña (dejar vacío para mantener la actual)</label>
                <input type="password" id="EditContrasena" name="Contrasena" placeholder="Nueva contraseña (opcional)" />
            </div>
            <div class="form-group">
                <label for="EditRolID">Rol *</label>
                <select id="EditRolID" name="RolID" class="form-control" required>
                    <option value="">Seleccione un rol</option>
                    @foreach (var rol in ViewBag.Roles as List<RolCliente>)
                    {
                        <option value="@rol.ID">@rol.Nombre</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="EditBibliotecaID">Biblioteca *</label>
                <select id="EditBibliotecaID" name="BibliotecaID" class="form-control" required>
                    <option value="">Seleccione una biblioteca</option>
                    @foreach (var biblioteca in ViewBag.Bibliotecas as List<Biblioteca>)
                    {
                        <option value="@biblioteca.ID">@biblioteca.Nombre</option>
                    }
                </select>
            </div>
            <div class="form-actions">
                <button type="button" class="btn btn-secondary" onclick="closeForm('editarClienteModal')">Cancelar</button>
                <button type="submit" class="btn btn-success">Guardar Cambios</button>
            </div>
        </form>
    </div>
</div>


<script>
    // Funciones para abrir y cerrar modales
    function toggleModal(modalId) {
        const modal = document.getElementById(modalId);
        if (modal.style.display === "flex") {
            modal.style.display = "none";
        } else {
            modal.style.display = "flex";
        }
    }

    function openEditClienteModal(cliente) {
        document.getElementById('EditID').value = cliente.ID;
        document.getElementById('EditNombreCliente').value = cliente.Nombre;
        document.getElementById('EditCorreo').value = cliente.Correo;
        document.getElementById('EditRolID').value = cliente.RolID;
        document.getElementById('EditBibliotecaID').value = cliente.BibliotecaID;

        toggleModal('editarClienteModal');
    }

    function closeForm(modalId) {
        document.getElementById(modalId).style.display = 'none';
    }

    // Cerrar modal al hacer clic fuera
    document.querySelectorAll('.modal-overlay').forEach(modal => {
        modal.addEventListener('click', function (e) {
            if (e.target === this) {
                this.style.display = 'none';
            }
        });
    });

    // Cerrar con tecla ESC
    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            document.querySelectorAll('.modal-overlay').forEach(modal => {
                modal.style.display = 'none';
            });
        }
    });
</script>